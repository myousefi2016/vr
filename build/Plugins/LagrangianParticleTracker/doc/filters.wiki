
==Lagrangian Particle Tracker==



{| class="PropertiesTable" border="1" cellpadding="5"
|-
| '''Property'''
| '''Description'''
| '''Default Value(s)'''
| '''Restrictions'''

|-
|'''Flow Input''' (FlowInput)
|
This property specifies the flow input to the
Lagrangian Particle Tracker filter.
|

|
Accepts input of following types:
* vtkDataSet
The dataset must contain a field array ()

with 3 component(s).

|-
|'''Particle Seeds''' (ParticleSeeds)
|
This property specifies the input used to obtain the
seed points to generate particles.
|

|
Accepts input of following types:
* vtkDataSet
The dataset must contain a field array (point)

with 3 component(s).

The dataset must contain a field array (point)

with 1 component(s).

|-
|'''Surface''' (Surface)
|
This property specifies the input used to surfaces the particles will interact with.

|

|
Accepts input of following types:
* vtkDataSet
The dataset must contain a field array (field)

with 1 component(s).

|-
|'''Integration Model''' (IntegrationModel)
|

|

|
The value can be one of the following:
|-
|'''Integrator''' (Integrator)
|
This property determines which integrator (with
increasing accuracy) to use for integrating particles.
|

|
The value can be one of the following:
|-
|'''CellLengthComputationMode''' (CellLengthComputationMode)
|
This property controls how the filter computes a cell length
to generate Step value for the integrator using the StepFactor.
The current default method is "Current Cell Velocity Direction" but it
is not the fastest and may not work with very irregular mesh.
"Current Cell Divergence Theorem" is great for irregular mesh but it is
even more slow and it does not support Voxel cell types.
"Cell Length" based computation is fast but will work
only with non-elongated cell.
|
3
|
The value(s) is an enumeration of the following:
* Last Cell Length (0)
* Current Cell Length (1)
* Last Cell Velocity Direction (2)
* Current Cell Velocity Direction (3)
* Last Cell Divergence Theorem (4)
* Current Cell Divergence Theorem (5)
|-
|'''Step''' (Step)
|
This property contains the step in cell unit
that the integration should take at each integration.
|
1.0
|

|-
|'''MinStep''' (MinStep)
|
This property contains the minimum step in cell unit
that the integration should take at each integration with a non small
velocity.
|
0.9
|

|-
|'''MaxStep''' (MaxStep)
|
This property contains the maximum step in cell unit
that the integration should take at each integration.
|
1.1
|

|-
|'''NumberOfSteps''' (NumberOfSteps)
|
This property contains the absolute maximum number of steps
a particle can integrate before being terminated. Increasing this property
too much will cost time and memory during computation.

|
100
|

|-
|'''AdaptiveStepReintegration''' (AdaptiveStepReintegration)
|
If AdaptativeStepReintegration is true, the Lagrangian
particle tracker will check the results of integration.
If the distance between the current point and the next point is greater
than StepFactorMax * cellLength, then the StepFactor will be decreased
and integration will be tried again until the distance is within the bounds
or the StepFactorMin limit the decrease of the StepFactor.

|
0
|
Accepts boolean values (0 or 1).
|-
|'''UseParticlePathsRenderingThreshold''' (UseParticlePathsRenderingThreshold)
|
If UseParticlePathsRenderingThreshold is true, the tracker will check
if the number of points in the paths is greater than the
PathsRenderingPointsThreshold, in that case no output
will be rendered for the particle paths.

|
0
|
Accepts boolean values (0 or 1).
|-
|'''PathsRenderingPointsThreshold''' (PathsRenderingPointsThreshold)
|
This property contains a threshold of number of points.
If the particle paths contain more points than this threshold and UseParticlePathsRenderingThreshold
is true, then no output will be rendered for the particle paths.

|
100
|


|}

==Lagrangian Seed Helper==



{| class="PropertiesTable" border="1" cellpadding="5"
|-
| '''Property'''
| '''Description'''
| '''Default Value(s)'''
| '''Restrictions'''

|-
|'''Input''' (Input)
|
This property specifies the flow input to use to
interpolate data for seeds.
|

|
Accepts input of following types:
* vtkDataSet
|-
|'''Seed Points Source''' (SeedPointsSource)
|
The value of this property determines how the seeds for
the streamlines will be generated.
|

|
The value can be one of the following:

|}

==Lagrangian Seed Helper With Custom Seeds==



{| class="PropertiesTable" border="1" cellpadding="5"
|-
| '''Property'''
| '''Description'''
| '''Default Value(s)'''
| '''Restrictions'''

|-
|'''Input''' (Input)
|
This property specifies the flow input to use to
interpolate data for seeds.
|

|
Accepts input of following types:
* vtkDataSet
|-
|'''Seed Points Source''' (SeedPointsSource)
|
This property specifies the input to generate seed data on.

|

|


|}

==Lagrangian Surface Helper==



{| class="PropertiesTable" border="1" cellpadding="5"
|-
| '''Property'''
| '''Description'''
| '''Default Value(s)'''
| '''Restrictions'''

|-
|'''Surface Input''' (SurfaceInput)
|
This property specifies the input to generate surface data on.

|

|
Accepts input of following types:
* vtkDataSet
|-
|'''Integration Model''' (IntegrationModel)
|
This property specifies the integration model to use to generate data.

|

|
The value can be one of the following:
|-
|'''ArrayToGenerate''' (ArrayToGenerate)
|
This property specifies arrays to generate in the output.

|

|


|}

